@model List<Courses_App.Core.Models.User>
@{
    Layout = "_LayoutAdmin";
    ViewData["Title"] = "Students Management";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-primary">
            <i class="fa fa-users"></i> @ViewData["Title"]
        </h2>
        <button type="button" class="btn btn-primary shadow-sm" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="fa fa-plus-circle"></i> Add Student
        </button>
    </div>

    <div class="card shadow-sm rounded-3 ">
        <div class="card-body table-responsive">
            <table id="usersTable" class="table table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>#</th>
                        <th>UserName</th>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td><span class="badge bg-secondary">#</span></td>
                            <td>@user.UserName</td>
                            <td>@user.FullName</td>
                            <td>@user.Email</td>
                            <td>@user.PhoneNumber</td>
                            <td>
                                <button class="btn btn-outline-success btn-sm btn-update-user" data-id="@user.Id">
                                    <i class="fa fa-edit"></i>
                                </button>
                                <button class="btn btn-outline-danger btn-sm btn-delete-user" data-id="@user.Id" data-name="@user.FullName">
                                    <i class="fa fa-trash"></i>
                                </button>
                                <button class="btn btn-outline-info btn-sm btn-info-user" data-id="@user.Id" data-name="@user.FullName">
                                    <i class="fa fa-info"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Modals/AddStudentModal.cshtml")
@await Html.PartialAsync("~/Views/Modals/deleteStudentModal.cshtml")
@await Html.PartialAsync("~/Views/Modals/UpdateStudentModal.cshtml")

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

<script>
    $(document).ready(function () {
        // DataTable instance
        var table = $('#usersTable').DataTable({
            language: {
                search: "Search:",
                lengthMenu: "Show _MENU_ entries",
                info: "Showing _START_ to _END_ of _TOTAL_ students",
                paginate: { previous: "Prev", next: "Next" }
            }
        });

        // Add Student
        $("#addUserForm").on("submit", function (e) {
            e.preventDefault();
            var token = $('input[name="__RequestVerificationToken"]').val();
            var formData = $(this).serialize();

            $.ajax({
                url: '@Url.Action("Create", "Student")',
                type: 'POST',
                data: formData,
                headers: { 'RequestVerificationToken': token },
                success: function (res) {
                    if(res.success){
                        var user = res.data;
                        table.row.add([
                            "#",
                            user.userName || "",
                            user.fullName || "",
                            user.email || "",
                            user.phoneNumber || "",
                            `<button class="btn btn-outline-success btn-sm btn-update-user" data-id="${user.id}"><i class="fa fa-edit"></i></button>
                             <button class="btn btn-outline-danger btn-sm btn-delete-user" data-id="${user.id}" data-name="${user.fullName}"><i class="fa fa-trash"></i></button>
                             <button class="btn btn-outline-info btn-sm btn-info-user" data-id="${user.id}" data-name="${user.fullName}"><i class="fa fa-info"></i></button>`
                        ]).draw();

                        bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
                        $("#addUserForm")[0].reset();

                        Swal.fire("Success", res.message, "success");
                    } else {
                        Swal.fire("Error", res.message, "error");
                    }
                },
                error: function () { Swal.fire("Error","Failed to add student","error"); }
            });
        });

        // Delete Student
        $(document).on('click', '.btn-delete-user', function () {
            let id = $(this).data('id');
            let name = $(this).data('name');

            Swal.fire({
                title: "Are you sure?",
                text: `Delete student: ${name}?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete",
                cancelButtonText: "Cancel",
                confirmButtonColor: "#d33"
            }).then((result) => {
                if(result.isConfirmed){
                    var token = $('input[name="__RequestVerificationToken"]').val();
                    $.ajax({
                        url: '/Student/DeleteConfirmed/' + id,
                        type: 'POST',
                        headers: { 'RequestVerificationToken': token },
                        success: function(res){
                            if(res.success){
                                const row = $(`button[data-id="${id}"]`).closest('tr');
                                table.row(row).remove().draw();
                                Swal.fire("Deleted!", res.message, "success");
                            } else { Swal.fire("Error", res.message, "error"); }
                        },
                        error: function(){ Swal.fire("Error","Failed to delete student","error"); }
                    });
                }
            });
        });

        // Update Student
        $(document).on("click", ".btn-update-user", function () {
            let row = $(this).closest("tr");
            let id = $(this).data("id");

            $("#updateUserId").val(id);
            $("#updateName").val(row.find("td:eq(2)").text().trim());
            $("#updateUserName").val(row.find("td:eq(3)").text().trim());
            $("#updatePhone").val(row.find("td:eq(4)").text().trim());

            new bootstrap.Modal(document.getElementById('updateUserModal')).show();
        });

        $("#updateUserForm").on("submit", function(e){
            e.preventDefault();
            let id = $("#updateUserId").val();
            let formData = $(this).serialize();
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '/Student/Update/' + id,
                type: 'POST',
                data: formData,
                headers: { 'RequestVerificationToken': token },
                success: function(res){
                    if(res.success){
                        const user = res.data;
                        const row = $(`.btn-update-user[data-id="${user.id}"]`).closest("tr");
                        table.row(row).data([
                            "#",
                            user.userName || "",
                            user.fullName || "",
                            user.email || "",
                            user.phoneNumber || "",
                            `<button class="btn btn-outline-success btn-sm btn-update-user" data-id="${user.id}"><i class="fa fa-edit"></i></button>
                             <button class="btn btn-outline-danger btn-sm btn-delete-user" data-id="${user.id}" data-name="${user.fullName}"><i class="fa fa-trash"></i></button>
                             <button class="btn btn-outline-info btn-sm btn-info-user" data-id="${user.id}" data-name="${user.fullName}"><i class="fa fa-info"></i></button>`
                        ]).draw();

                        bootstrap.Modal.getInstance(document.getElementById('updateUserModal')).hide();
                        $("#updateUserForm")[0].reset();

                        Swal.fire("Updated!", res.message, "success");
                    } else {
                        Swal.fire("Error", res.message, "error");
                    }
                },
                error: function(){ Swal.fire("Error","Failed to update student","error"); }
            });
        });

        // Show Courses
        $(document).on("click", ".btn-info-user", function(){
            const studentId = $(this).data("id");
            const studentName = $(this).data("name");

            $.ajax({
                url: '/Student/GetCourses',
                type: 'GET',
                data: { studentId },
                success: function(courses){
                    if(courses && courses.length>0){
                        let list = "<ul class='list-group'>";
                        courses.forEach(c => { list += `<li class='list-group-item'>${c.name}</li>`; });
                        list += "</ul>";
                        Swal.fire({ title:`Courses for ${studentName}`, html:list, icon:"info", confirmButtonText:"Close" });
                    } else {
                        Swal.fire({ title:`Courses for ${studentName}`, text:"No courses found.", icon:"warning", confirmButtonText:"Close" });
                    }
                },
                error: function(){ Swal.fire("Error","Failed to fetch courses","error"); }
            });
        });

        // Show/Hide password fields
        $("#check").change(function(){
            if($(this).is(":checked")) $("#passwordFields").slideDown();
            else $("#passwordFields").slideUp();
        });

    });
</script>
